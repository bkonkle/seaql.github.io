"use strict";(self.webpackChunkstarfish_ql=self.webpackChunkstarfish_ql||[]).push([[369],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,h=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2972:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={},c="Crawling crates.io Data",l={unversionedId:"install-and-config/crawling-crates-io-data",id:"install-and-config/crawling-crates-io-data",title:"Crawling crates.io Data",description:"Once the database and query engine are up and running, the next step is to prepare the data to fill the database up with.",source:"@site/docs/01-install-and-config/02-crawling-crates-io-data.md",sourceDirName:"01-install-and-config",slug:"/install-and-config/crawling-crates-io-data",permalink:"/StarfishQL/docs/install-and-config/crawling-crates-io-data",editUrl:"https://github.com/SeaQL/seaql.github.io/edit/master/StarfishQL/docs/01-install-and-config/02-crawling-crates-io-data.md",tags:[],version:"current",lastUpdatedBy:"Chris Tsang",lastUpdatedAt:1650115992,formattedLastUpdatedAt:"4/16/2022",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Set up the Graph Query Engine",permalink:"/StarfishQL/docs/install-and-config/setup-graph-queery-engine"},next:{title:"Visualizing Dependency Graph",permalink:"/StarfishQL/docs/install-and-config/visualizing-dependency-graph"}},p={},u=[{value:"Running the crawler for the first time",id:"running-the-crawler-for-the-first-time",level:2},{value:"Updating the database",id:"updating-the-database",level:2},{value:"Starting from scratch",id:"starting-from-scratch",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"crawling-cratesio-data"},"Crawling crates.io Data"),(0,i.kt)("p",null,"Once the database and query engine are up and running, the next step is to prepare the data to fill the database up with."),(0,i.kt)("h2",{id:"running-the-crawler-for-the-first-time"},"Running the crawler for the first time"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# starfish-ql/freeport/backend\nnpm install\nnpm start\n")),(0,i.kt)("p",null,"The node application ",(0,i.kt)("strong",{parentName:"p"},"pulls")," the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/crates.io-index"},"index repo")," of crates.io and update the database by using the local cloned repo, so that the whole crawling process has minimal impact on crates.io's service."),(0,i.kt)("h2",{id:"updating-the-database"},"Updating the database"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# starfish-ql/freeport/backend\nnpm start\n")),(0,i.kt)("p",null,"The same npm script (",(0,i.kt)("inlineCode",{parentName:"p"},"start"),") is used for updating the database for convenience. This is made possible by storing some crawling metadata."),(0,i.kt)("h2",{id:"starting-from-scratch"},"Starting from scratch"),(0,i.kt)("p",null,"In some cases, you may want to wipe out the whole database and start from scratch."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# starfish-ql/freeport/backend\nnpm restart\n")))}f.isMDXComponent=!0}}]);